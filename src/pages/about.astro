---
import Layout from '../layouts/Layout.astro'
import data from '../assets/data.json'
import AnimatedText from '../components/AnimatedText.astro'
import IconDribbble from '../components/IconDribbble.astro'
import AboutProjects from '../components/AboutProjects.astro'
const { resume, certifications } = data
---

<Layout title="About">
	<main>
		<section class="relative pt-12">
			<div class="dot-grid fixed right-0 top-0 h-dvh w-1/3 opacity-30 dark:opacity-20"></div>
			<section class="px-4 md:px-0">
				<div
					class="will-animate fade-in relative z-10 mx-auto max-w-3xl rounded-3xl bg-neutral-50 bg-opacity-50 p-6 opacity-0 shadow-2xl backdrop-blur-md dark:border dark:border-neutral-700 dark:bg-neutral-900 dark:bg-opacity-50 dark:shadow-none"
				>
					<h1 class="sr-only">About Me</h1>
					<AnimatedText text="About Me" class="mb-4 fill-fg stroke-fg" />
					<div class="flex flex-col gap-y-6">
						<p>
							Hello, my name is Brendan and I design and build applications in Wentzville, Missouri. My love for art and technology led me to pursue a Bachelor
							of Science degree in Game Art from Full Sail University. Despite graduating Valedictorian in 2010, I was unable to find paying work in the
							industry due to the economy.
						</p>
						<p>
							To make ends meet I worked a variety of jobs including restaurants, retail, B2B sales, janitor, hand-dyed-yarn colorist, becoming a licensed
							Realtor, teaching at a technical college, and starting my own business. Ultimately I decided to learn to code with <a
								href="https://www.freecodecamp.org/brendanbax"
								target="_blank"
								class="link-text">Free Code Camp</a
							>, start building web apps, and I haven't looked back.
						</p>
						<p>
							I'm a charismatic leader and love teaching, having given career talks about design and user experience to local high school students. Outside of
							work I lead small groups with my church and volunteer in the kids ministry on Sundays.
						</p>
					</div>
				</div>
			</section>
			<section class="bg-gradient-to-t from-transparent via-transparent to-transparent to-90% px-4 py-12 dark:via-neutral-900 md:px-0">
				<div class="will-animate fade-in mx-auto my-6 flex w-full max-w-prose flex-col gap-y-6 opacity-0">
					<h2 class="sr-only">Resume</h2>
					<AnimatedText text="Resume" class="mb-4 fill-fg stroke-fg" />
				</div>
				<ul class="mx-auto flex max-w-prose flex-col">
					{
						resume.map((r, i) => (
							<li class="resume-item flex gap-x-2 opacity-0">
								<div class="flex flex-col items-center justify-start">
									{/* For first element (current) indicate a larger circle that's hollow */}
									{i === 0 ? (
										<svg class="relative h-6 w-6 flex-shrink-0 flex-grow-0 text-accent" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
											<circle cx="20" cy="20" r="8" fill="none" stroke="currentColor" />
											<circle cx="20" cy="20" r="2" fill="currentColor" />
											<circle cx="20" cy="20" r="8" fill="none" stroke="currentColor" class="ping" />
										</svg>
									) : (
										<svg class="h-6 w-6 flex-shrink-0 flex-grow-0" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
											<circle cx="12" cy="12" r="4" />
										</svg>
									)}
									{i !== resume.length - 1 && <span class="resume-connector h-full w-px bg-fg-muted opacity-0" />}
								</div>
								<div class="pb-12">
									<div class="mb-2 flex items-baseline gap-x-2 text-sm font-semibold">
										<p class="text-accent">{r.duration}</p>
										<p class="text-fg-muted">&#64;</p>
										<p class="text-fg-muted">{r.business}</p>
									</div>
									<h3 class="mb-2 text-xl font-bold">{r.title}</h3>
									<p>{r.summary}</p>
									{r.projects && r.projects.length > 0 && (
										<details>
											<summary class="mt-4 cursor-pointer text-sm font-bold">Show details</summary>
											<ul class="mt-4 rounded-lg border border-neutral-200 bg-neutral-50 bg-opacity-50 p-6 backdrop-blur-md dark:border-neutral-700 dark:bg-neutral-900 dark:bg-opacity-50 dark:shadow-none">
												{r.projects.map((p) => (
													<li class="mb-6">
														<p class="mb-4 font-semibold">{p.outcomes}</p>
														<ul class="flex flex-col gap-y-6">
															{p.methods.map((m) => (
																<li class="ml-6 list-disc marker:text-accent">{m}</li>
															))}
														</ul>
														{p.link && (
															<a
																href={p.link}
																target="_blank"
																class="mx-auto mt-6 flex max-w-fit items-center gap-x-2 rounded-lg border border-accent px-2 py-1 text-sm font-semibold text-accent transition-colors hover:bg-neutral-100 dark:hover:bg-neutral-700"
															>
																<IconDribbble class="w-4" />
																<span class="text-sm">View on Dribbble</span>
															</a>
														)}
													</li>
												))}
											</ul>
										</details>
									)}
								</div>
							</li>
						))
					}
				</ul>
			</section>
		</section>
		<AboutProjects />
		<section class="px-4 py-12 md:px-0">
			<div
				class="will-animate fade-in relative z-10 mx-auto max-w-3xl rounded-3xl bg-neutral-50 bg-opacity-50 p-6 opacity-0 shadow-2xl backdrop-blur-md dark:border dark:border-neutral-700 dark:bg-neutral-900 dark:bg-opacity-50 dark:shadow-none"
			>
				<h2 class="sr-only">Education</h2>
				<AnimatedText text="Education" class="mb-4 fill-fg stroke-fg" />
				<div class="mb-6">
					<h3 class="mb-2 text-xl font-bold">Full Sail University, 2010</h3>
					<p class="font-semibold text-fg-muted">Bachelor of Science in Game Art</p>
					<p>Valedictorian. Recognized for perfect attendance and recipient of multiple course directors awards for academic excellence.</p>
				</div>
				<div>
					<h3 class="mb-2 text-xl font-bold">Free Code Camp Certifications</h3>
					<ul class="list-disc pl-6">
						{
							certifications.map((c) => (
								<li>
									<a href={c.slug} target="_blank" class="link-text">
										{c.title}
									</a>
								</li>
							))
						}
					</ul>
				</div>
			</div>
		</section>
	</main>
</Layout>

<style>
	.animate-resume-item .resume-connector {
		overflow: hidden;
		animation: draw-line 2s forwards;
	}
	@keyframes draw-line {
		0% {
			max-height: 0;
			opacity: 0;
		}
		25% {
			max-height: 0;
			opacity: 1;
		}
		100% {
			max-height: 5000px;
			opacity: 1;
		}
	}

	.ping {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: scale(200%);
		transform-origin: center;
		animation: grow 4000ms infinite;
	}
	@keyframes grow {
		0% {
			transform: scale(50%);
			opacity: 0;
		}
		50% {
			transform: scale(50%);
		}
		65% {
			opacity: 0.9;
		}
		75% {
			transform: scale(230%);
		}
		100% {
			opacity: 0;
		}
	}
</style>

<script>
	const resumeItems = document.querySelectorAll('.resume-item')

	if (resumeItems) {
		resumeItems.forEach((e, i) => {
			const observer = new IntersectionObserver((entries) => {
				entries.forEach((entry) => {
					if (entry && entry.isIntersecting) {
						e.classList.remove('opacity-0')

						const previousEntry = resumeItems[i - 1]

						if (previousEntry) {
							previousEntry.classList.remove('opacity-0')
							previousEntry.classList.add('animate-resume-item')
						}

						if (e.classList.contains('resume-item')) {
							e.classList.add('animate-fade-in')
						}
					}
				})
			})
			observer.observe(e)
		})
	}

	const detailItems = document.querySelectorAll('details')

	if (detailItems) {
		detailItems.forEach((d) => {
			d.addEventListener('toggle', () => {
				const summaryLabel = d.querySelector('summary')

				if (summaryLabel) {
					if (d.open) {
						summaryLabel.innerHTML = 'Hide details'
					} else {
						summaryLabel.innerHTML = 'Show details'
					}
				}
			})
		})
	}
</script>
